### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  errors: [FieldError]
  token: String
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Facility {
  createdAt: DateTime!
  createdBy: User!
  id: String!
  name: String!
  satellites: [Satellite]
  updatedAt: DateTime!
}

input FacilityCreateInput {
  name: String!
  satellites: [SatelliteCreateInput]
}

input FacilityUniqueInput {
  id: String
  name: String
}

type FieldError {
  field: String
  message: String
}

enum FromToFeatureEnum {
  Battery
  BlindEnd
  CompressorStation
  GasProcessingPlant
  Header
  InjectionPlant
  MeterStation
  Pipeline
  PumpStation
  Satellite
  StorageTank
  UndergroundCapOrTieIn
  Well
}

type FromToFeatureEnumObject {
  Battery: String!
  BlindEnd: String!
  CompressorStation: String!
  GasProcessingPlant: String!
  Header: String!
  InjectionPlant: String!
  MeterStation: String!
  Pipeline: String!
  PumpStation: String!
  Satellite: String!
  StorageTank: String!
  UndergroundCapOrTieIn: String!
  Well: String!
}

enum GradeEnum {
  Grade5
  Grade9
  Grade11
  Grade17
  Grade25
  Grade35
  Grade150
  Grade155
  Grade200
  Grade241
  Grade300
  Grade800
  Grade810
  Grade900
  Grade1000
  Grade1103
  Grade1200
  Grade1250
  Grade2010
  Grade2250
  Grade2411
  Grade2413
  Grade2500
  Grade2750
  Grade2901
  Grade2902
  Grade3591
  Grade3592
  Grade3593
  GradeA
  GradeB
  GradeBW1
  GradeJ55
  GradeT1A
  GradeT1B
  GradeT4
  GradeT4A
  GradeX42
  GradeX52
}

type GradeEnumObject {
  Grade5: String!
  Grade9: String!
  Grade11: String!
  Grade17: String!
  Grade25: String!
  Grade35: String!
  Grade150: String!
  Grade155: String!
  Grade200: String!
  Grade241: String!
  Grade300: String!
  Grade800: String!
  Grade810: String!
  Grade900: String!
  Grade1000: String!
  Grade1103: String!
  Grade1200: String!
  Grade1250: String!
  Grade2010: String!
  Grade2250: String!
  Grade2411: String!
  Grade2413: String!
  Grade2500: String!
  Grade2750: String!
  Grade2901: String!
  Grade2902: String!
  Grade3591: String!
  Grade3592: String!
  Grade3593: String!
  GradeA: String!
  GradeB: String!
  GradeBW1: String!
  GradeJ55: String!
  GradeT1A: String!
  GradeT1B: String!
  GradeT4: String!
  GradeT4A: String!
  GradeX42: String!
  GradeX52: String!
}

type InjectionPoint {
  createdAt: DateTime!
  createdBy: User!
  firstInjection: DateTime
  firstProduction: DateTime
  gas: Float!
  id: String!
  lastInjection: DateTime
  lastProduction: DateTime
  oil: Float!
  pipeline: Pipeline
  pvNodeId: String
  pvUnitId: String
  satellite: Satellite
  source: String!
  updatedAt: DateTime!
  water: Float!
}

input InjectionPointCreateInput {
  firstInjection: DateTime
  firstProduction: DateTime
  gas: Float!
  lastInjection: DateTime
  lastProduction: DateTime
  oil: Float!
  pvNodeId: String
  pvUnitId: String
  source: String!
  water: Float!
}

enum InternalProtectionEnum {
  Cement
  ExpandedPolyethylene
  FreeStandingSlipLined
  ThinFilm
  Uncoated
  Unknown
}

type InternalProtectionEnumObject {
  Cement: String!
  ExpandedPolyethylene: String!
  FreeStandingSlipLined: String!
  ThinFilm: String!
  Uncoated: String!
  Unknown: String!
}

enum MaterialEnum {
  Aluminum
  AsbestosCement
  CelluloseAcetateButyrate
  Composite
  Fiberglass
  Polyethylene
  PolyvinylChloride
  Steel
  Unknown
}

type MaterialEnumObject {
  Aluminum: String!
  AsbestosCement: String!
  CelluloseAcetateButyrate: String!
  Composite: String!
  Fiberglass: String!
  Polyethylene: String!
  PolyvinylChloride: String!
  Steel: String!
  Unknown: String!
}

type Mutation {
  createFacility(data: FacilityCreateInput!): Facility
  deleteInjectionPointFromPipeline(id: String!): InjectionPoint
  deletePipeline(id: String!): Pipeline
  deleteSatellite(id: String!): Satellite
  duplicatePipeline(id: String!): Pipeline
  editFacility(id: String!, name: String): Facility
  editInjectionPoint(firstInjection: DateTime, firstProduction: DateTime, gas: Float, id: String!, lastInjection: DateTime, lastProduction: DateTime, oil: Float, pipelineId: String, pvNodeId: String, pvUnitId: String, satelliteId: String, source: String, water: Float): InjectionPoint
  editPipeline(from: String, fromFeature: FromToFeatureEnum, grade: GradeEnum, id: String!, internalProtection: InternalProtectionEnum, length: Float, license: String, material: MaterialEnum, mop: Int, outsideDiameter: Float, satelliteId: String, segment: String, status: StatusEnum, substance: SubstanceEnum, to: String, toFeature: FromToFeatureEnum, type: TypeEnum, wallThickness: Float): Pipeline
  editSatellite(facilityUniqueInput: FacilityUniqueInput, id: String!, name: String): Satellite
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, firstName: String!, lastName: String!, password: String!): AuthPayload
}

type Pipeline {
  createdAt: DateTime!
  createdBy: User!
  downstream: [Pipeline]
  from: String!
  fromFeature: FromToFeatureEnum
  grade: GradeEnum
  id: String!
  index: Int
  injectionPoints: [InjectionPoint]
  internalProtection: InternalProtectionEnum
  length: Float!
  license: String!
  material: MaterialEnum
  mop: Int
  outsideDiameter: Float
  satellite: Satellite
  segment: String!
  status: StatusEnum!
  substance: SubstanceEnum!
  to: String!
  toFeature: FromToFeatureEnum
  type: TypeEnum
  updatedAt: DateTime!
  upstream: [Pipeline]
  wallThickness: Float
}

input PipelineCreateInput {
  downstream: [PipelineCreateInput]
  from: String!
  fromFeature: FromToFeatureEnum
  grade: GradeEnum
  injectionPoints: [InjectionPointCreateInput]
  internalProtection: InternalProtectionEnum
  length: Float!
  license: String!
  material: MaterialEnum
  mop: Int
  outsideDiameter: Float
  segment: String!
  status: StatusEnum!
  substance: SubstanceEnum!
  to: String!
  toFeature: FromToFeatureEnum
  type: TypeEnum
  upstream: [PipelineCreateInput]
  wallThickness: Float
}

input PipelineUniqueInput {
  id: String
  license: String
  segment: String
}

type Query {
  allFacilities: [Facility]
  allInjectionPoints: [InjectionPoint]
  allSatellites: [Satellite]
  allUsers: [User]
  me: User
  pipelineById(id: String!): Pipeline
  pipelinesById(facilityId: String, satelliteId: String): [Pipeline]
  pipelinesByUser(userUniqueInput: UserUniqueInput!): [Pipeline]
  validators: Validator
}

enum Role {
  ADMIN
  USER
}

type Satellite {
  createdAt: DateTime!
  createdBy: User!
  facility: Facility
  id: String!
  injectionPoints: [InjectionPoint]
  name: String!
  pipelines: [Pipeline]
  updatedAt: DateTime!
}

input SatelliteCreateInput {
  injectionPoints: [InjectionPointCreateInput]
  name: String!
  pipelines: [PipelineCreateInput]
}

input SatelliteUniqueInput {
  id: String
  name: String
}

enum StatusEnum {
  Abandoned
  Active
  Cancelled
  Discontinued
  New
  NotConstructed
  Operating
  Removed
  ToBeConstructed
}

type StatusEnumObject {
  Abandoned: String!
  Active: String!
  Cancelled: String!
  Discontinued: String!
  New: String!
  NotConstructed: String!
  Operating: String!
  Removed: String!
  ToBeConstructed: String!
}

enum SubstanceEnum {
  CrudeOil
  FreshWater
  FuelGas
  LVPProducts
  NaturalGas
  OilWellEffluent
  SaltWater
  SourNaturalGas
}

type SubstanceEnumObject {
  CrudeOil: String!
  FreshWater: String!
  FuelGas: String!
  LVPProducts: String!
  NaturalGas: String!
  OilWellEffluent: String!
  SaltWater: String!
  SourNaturalGas: String!
}

enum TypeEnum {
  Type5A
  Type5L
  Type5LX
  Type515
  Type2306
  Type3406
  Type3408
  Type6063
  Type6351
  TypeA53
  TypeA106
  TypeA120
  TypeAMERON
  TypeB5IS
  TypeB51S
  TypeB515
  TypeCENTRON
  TypeCIBA
  TypeFSLP
  TypeREDTHR
  TypeSMITH
  TypeSTAR
  TypeTBS
  TypeWSLP
  TypeZ2451
  TypeZ2453
}

type TypeEnumObject {
  Type5A: String!
  Type5L: String!
  Type5LX: String!
  Type515: String!
  Type2306: String!
  Type3406: String!
  Type3408: String!
  Type6063: String!
  Type6351: String!
  TypeA53: String!
  TypeA106: String!
  TypeA120: String!
  TypeAMERON: String!
  TypeB5IS: String!
  TypeB51S: String!
  TypeB515: String!
  TypeCENTRON: String!
  TypeCIBA: String!
  TypeFSLP: String!
  TypeREDTHR: String!
  TypeSMITH: String!
  TypeSTAR: String!
  TypeTBS: String!
  TypeWSLP: String!
  TypeZ2451: String!
  TypeZ2453: String!
}

type User {
  email: String!
  facilities: [Facility]
  firstName: String!
  id: String!
  injectionPoints: [InjectionPoint]
  lastName: String!
  pipelines: [Pipeline]
  role: Role!
  satellites: [Satellite]
}

input UserCreateInput {
  email: String!
  facilities: [FacilityCreateInput]
  firstName: String!
  injectionPoints: [InjectionPointCreateInput]
  lastName: String!
  pipelines: [PipelineCreateInput]
  satellites: [SatelliteCreateInput]
}

input UserUniqueInput {
  email: String
  id: String
}

type Validator {
  fromToFeatureEnum: FromToFeatureEnumObject!
  fromToMatchPattern: String!
  gradeEnum: GradeEnumObject!
  internalProtectionEnum: InternalProtectionEnumObject!
  lengthMatchPattern: String!
  licenseMatchPattern: String!
  materialEnum: MaterialEnumObject!
  mopMatchPattern: String!
  outsideDiameterMatchPattern: String!
  segmentMatchPattern: String!
  statusEnum: StatusEnumObject!
  substanceEnum: SubstanceEnumObject!
  typeEnum: TypeEnumObject!
  wallThicknessMatchPattern: String!
}
