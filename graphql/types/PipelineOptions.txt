/*import { enumType, intArg, objectType, stringArg, extendType, inputObjectType, nonNull, arg, floatArg, booleanArg } from 'nexus';
import { Context } from '../context';
import { NexusGenFieldTypes } from '../../node_modules/@types/nexus-typegen/index';

export const PipelineOptionsPipelineFacilitySatellite = objectType({
  name: 'PipelineOptionsPipelineFacilitySatellite',
  definition(t) {
    t.nonNull.string('facility')
    t.nonNull.string('satellite')
    t.nonNull.string('id')
    t.nonNull.string('license')
    t.nonNull.string('segment')
  }
})

export const PipelineOptionsPipeline = objectType({
  name: 'PipelineOptionsPipeline',
  definition(t) {
    t.nonNull.string('id')
    t.nonNull.string('license')
    t.nonNull.string('segment')
  }
})


export const PipelineOptionsSatellite = objectType({
  name: 'PipelineOptionsSatellite',
  definition(t) {
    t.string('satellite')
    t.list.field('pipelines', { type: 'PipelineOptionsPipeline' })
  }
})


export const PipelineOptionsFacility = objectType({
  name: 'PipelineOptionsFacility',
  definition(t) {
    t.string('facility')
    t.list.field('satellites', { type: 'PipelineOptionsSatellite' })
  }
})

/*function groupBy<T extends Record<string, string | number | symbol>>(objectArray: T[], property: keyof T) {
  const seed: Record<string | number | symbol, T[]> = {}; // notice that we change the seed type as well
  return objectArray.reduce(function (acc, obj) {
    let key = obj[property]
    if (!acc[key]) {
      acc[key] = [];
    }
    // delete obj[property];
    acc[key].push(obj);
    return acc;
  }, seed)
}*/

// export const PipelineOptionsQuery = extendType({
//   type: 'Query',
//   definition(t) {
//     t.list.field('pipelineOptions', {
//       type: 'PipelineOptionsPipelineFacilitySatellite',
//       resolve: async (_parent, args, ctx: Context) => {

//         const result = await ctx.prisma.$queryRaw<NexusGenFieldTypes['PipelineOptionsPipelineFacilitySatellite'][]>`
//         SELECT

//         COALESCE(f.name, 'no facility') "facility",
//         COALESCE(s.name, 'no satellite') "satellite",
//         pip.id,
//         pip.license,
//         pip.segment

//         FROM "ppl_db"."Pipeline" pip
//         LEFT OUTER JOIN "ppl_db"."Satellite" s ON s."id" = pip."satelliteId"
//         LEFT OUTER JOIN "ppl_db"."Facility" f ON f."id" = s."facilityId"
//         `

//         return result;
//       }
//     })
//   },
// });