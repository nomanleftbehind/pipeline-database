mutation Login($email: String!, $password: String!) {
  login(email: $email, password: $password) {
    user {
      id
      email
      firstName
      lastName
      role
    }
    error {
      field
      message
    }
  }
}

mutation Signup($userRegisterInput: UserRegisterInput!) {
  signup(userRegisterInput: $userRegisterInput) {
    user {
      id
      email
      firstName
      lastName
      role
    }
    error {
      field
      message
    }
  }
}

mutation Logout {
  logout
}

mutation ForgotPassword($email: String!) {
  forgotPassword(email: $email)
}

mutation ChangePassword($changePasswordInput: ChangePasswordInput!) {
  changePassword(changePasswordInput: $changePasswordInput) {
    user {
      id
      email
      firstName
      lastName
      role
    }
    error {
      field
      message
    }
  }
}

mutation DeletePipeline($id: String!) {
  deletePipeline(id: $id) {
    pipeline {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DuplicatePipeline($id: String!) {
  duplicatePipeline(id: $id) {
    pipeline {
      id
    }
    error {
      field
      message
    }
  }
}

mutation ConnectPipeline($pipelineId: String!, $connectNewPipelineId: String!, $flowCalculationDirection: FlowCalculationDirectionEnum!, $connectedPipelineId: String) {
  connectPipeline(pipelineId: $pipelineId, connectNewPipelineId: $connectNewPipelineId, flowCalculationDirection: $flowCalculationDirection, connectedPipelineId: $connectedPipelineId) {
    pipelinesOnPipelines {
      upstreamId
      downstreamId
    }
    error {
      field
      message
    }
  }
}

mutation DisconnectPipeline($pipelineId: String!, $disconnectPipelineId: String!, $flowCalculationDirection: FlowCalculationDirectionEnum!) {
  disconnectPipeline(pipelineId: $pipelineId, disconnectPipelineId: $disconnectPipelineId, flowCalculationDirection: $flowCalculationDirection) {
    pipelinesOnPipelines {
      upstreamId
      downstreamId
    }
    error {
      field
      message
    }
  }
}

mutation ConnectWell($id: String!, $pipelineId: String!) {
  connectWell(id: $id, pipelineId: $pipelineId) {
    well {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DisconnectWell($id: String!) {
  disconnectWell(id: $id) {
    well {
      id
    }
    error {
      field
      message
    }
  }
}

mutation ConnectSalesPoint($id: String!, $pipelineId: String!) {
  connectSalesPoint(id: $id, pipelineId: $pipelineId) {
    salesPoint {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DisconnectSalesPoint($id: String!) {
  disconnectSalesPoint(id: $id) {
    salesPoint {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditPipeline($id: String!, $satelliteId: String, $license: String, $segment: String, $flowCalculationDirection: FlowCalculationDirectionEnum, $from: String, $fromFeatureId: String, $to: String, $toFeatureId: String, $length: Float, $pipelineTypeId: String, $pipelineGradeId: String, $yieldStrength: Int, $outsideDiameter: Float, $wallThickness: Float, $pipelineMaterialId: String, $mop: Int, $pipelineInternalProtectionId: String, $piggable: Boolean, $piggingFrequency: Int) {
  editPipeline(id: $id, satelliteId: $satelliteId, license: $license, segment: $segment, flowCalculationDirection: $flowCalculationDirection, from: $from, fromFeatureId: $fromFeatureId, to: $to, toFeatureId: $toFeatureId, length: $length, pipelineTypeId: $pipelineTypeId, pipelineGradeId: $pipelineGradeId, yieldStrength: $yieldStrength, outsideDiameter: $outsideDiameter, wallThickness: $wallThickness, pipelineMaterialId: $pipelineMaterialId, mop: $mop, pipelineInternalProtectionId: $pipelineInternalProtectionId, piggable: $piggable, piggingFrequency: $piggingFrequency) {
    pipeline {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditLicenseChange($id: String!, $statusId: String, $substanceId: String, $date: DateTime, $comment: String, $linkToDocumentation: String) {
  editLicenseChange(id: $id, statusId: $statusId, substanceId: $substanceId, date: $date, comment: $comment, linkToDocumentation: $linkToDocumentation) {
    licenseChange {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddLicenseChange($pipelineId: String!) {
  addLicenseChange(pipelineId: $pipelineId) {
    licenseChange {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeleteLicenseChange($id: String!) {
  deleteLicenseChange(id: $id) {
    licenseChange {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditPressureTest($id: String!, $limitingSpec: LimitingSpecEnum, $infoSentOutDate: DateTime, $ddsDate: DateTime, $pressureTestDate: DateTime, $pressureTestReceivedDate: DateTime, $integritySheetUpdated: DateTime, $comment: String) {
  editPressureTest(id: $id, limitingSpec: $limitingSpec, infoSentOutDate: $infoSentOutDate, ddsDate: $ddsDate, pressureTestDate: $pressureTestDate, pressureTestReceivedDate: $pressureTestReceivedDate, integritySheetUpdated: $integritySheetUpdated, comment: $comment) {
    pressureTest {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddPressureTest($pipelineId: String!) {
  addPressureTest(pipelineId: $pipelineId) {
    pressureTest {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeletePressureTest($id: String!) {
  deletePressureTest(id: $id) {
    pressureTest {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditPigRun($id: String!, $pigTypeId: String, $dateIn: DateTime, $dateOut: DateTime, $isolationValveFunctionTest: PigInspectionEnum, $pigSenderReceiverInspection: PigInspectionEnum, $comment: String, $operatorId: String) {
  editPigRun(id: $id, pigTypeId: $pigTypeId, dateIn: $dateIn, dateOut: $dateOut, isolationValveFunctionTest: $isolationValveFunctionTest, pigSenderReceiverInspection: $pigSenderReceiverInspection, comment: $comment, operatorId: $operatorId) {
    pigRun {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddPigRun($pipelineId: String!) {
  addPigRun(pipelineId: $pipelineId) {
    pigRun {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeletePigRun($id: String!) {
  deletePigRun(id: $id) {
    pigRun {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditPipelineBatch($id: String!, $date: DateTime, $productId: String, $cost: Float, $chemicalVolume: Float, $diluentVolume: Float, $comment: String) {
  editPipelineBatch(id: $id, date: $date, productId: $productId, cost: $cost, chemicalVolume: $chemicalVolume, diluentVolume: $diluentVolume, comment: $comment) {
    pipelineBatch {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddPipelineBatch($pipelineId: String!) {
  addPipelineBatch(pipelineId: $pipelineId) {
    pipelineBatch {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeletePipelineBatch($id: String!) {
  deletePipelineBatch(id: $id) {
    pipelineBatch {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditWellBatch($id: String!, $date: DateTime, $productId: String, $cost: Float, $chemicalVolume: Float, $diluentVolume: Float, $comment: String) {
  editWellBatch(id: $id, date: $date, productId: $productId, cost: $cost, chemicalVolume: $chemicalVolume, diluentVolume: $diluentVolume, comment: $comment) {
    wellBatch {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddWellBatch($wellId: String!) {
  addWellBatch(wellId: $wellId) {
    wellBatch {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeleteWellBatch($id: String!) {
  deleteWellBatch(id: $id) {
    wellBatch {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditRisk($id: String!, $aerialReview: Boolean, $environmentProximityTo: EnvironmentProximityToEnum, $geotechnicalSlopeAngleS1: Int, $geotechnicalFacingS1: GeotechnicalFacingEnum, $geotechnicalHeightS1: Int, $geotechnicalSlopeAngleS2: Int, $geotechnicalFacingS2: GeotechnicalFacingEnum, $geotechnicalHeightS2: Int, $dateSlopeChecked: DateTime, $repairTimeDays: Int, $releaseTimeDays: Int, $oilReleaseCost: Float, $gasReleaseCost: Float, $consequencePeople: Int, $probabilityGeo: Int, $safeguardInternalProtection: Int, $safeguardExternalCoating: Int) {
  editRisk(id: $id, aerialReview: $aerialReview, environmentProximityTo: $environmentProximityTo, geotechnicalSlopeAngleS1: $geotechnicalSlopeAngleS1, geotechnicalFacingS1: $geotechnicalFacingS1, geotechnicalHeightS1: $geotechnicalHeightS1, geotechnicalSlopeAngleS2: $geotechnicalSlopeAngleS2, geotechnicalFacingS2: $geotechnicalFacingS2, geotechnicalHeightS2: $geotechnicalHeightS2, dateSlopeChecked: $dateSlopeChecked, repairTimeDays: $repairTimeDays, releaseTimeDays: $releaseTimeDays, oilReleaseCost: $oilReleaseCost, gasReleaseCost: $gasReleaseCost, consequencePeople: $consequencePeople, probabilityGeo: $probabilityGeo, safeguardInternalProtection: $safeguardInternalProtection, safeguardExternalCoating: $safeguardExternalCoating) {
    risk {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddRisk($id: String!) {
  addRisk(id: $id) {
    risk {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeleteRisk($id: String!) {
  deleteRisk(id: $id) {
    risk {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AllocateRisk {
  allocateRisk {
    success {
      field
      message
    }
    error {
      field
      message
    }
  }
}

mutation EditChemical($id: String!, $chemicalSupplierId: String, $baselineFluidAnalysisDate: DateTime, $scaling: Boolean, $bacteria: Boolean, $co2: Boolean, $o2: Boolean, $h2s: Boolean, $continuousInjection: Boolean, $injectionRate: Float, $downholeBatch: Boolean, $inhibitorPipelineBatch: Boolean, $bacteriaTreatment: Boolean, $scaleTreatment: Boolean, $batchFrequency: Int, $comment: String) {
  editChemical(id: $id, chemicalSupplierId: $chemicalSupplierId, baselineFluidAnalysisDate: $baselineFluidAnalysisDate, scaling: $scaling, bacteria: $bacteria, co2: $co2, o2: $o2, h2s: $h2s, continuousInjection: $continuousInjection, injectionRate: $injectionRate, downholeBatch: $downholeBatch, inhibitorPipelineBatch: $inhibitorPipelineBatch, bacteriaTreatment: $bacteriaTreatment, scaleTreatment: $scaleTreatment, batchFrequency: $batchFrequency, comment: $comment) {
    chemical {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddChemical($id: String!) {
  addChemical(id: $id) {
    chemical {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeleteChemical($id: String!) {
  deleteChemical(id: $id) {
    chemical {
      id
    }
    error {
      field
      message
    }
  }
}