mutation Login($email: String!, $password: String!) {
  login(email: $email, password: $password) {
    user {
      id
      email
      firstName
      lastName
      role
    }
    error {
      field
      message
    }
  }
}

mutation Signup($userCreateInput: UserCreateInput!) {
  signup(userCreateInput: $userCreateInput) {
    user {
      id
      email
      firstName
      lastName
      role
    }
    error {
      field
      message
    }
  }
}

mutation Logout {
  logout
}

mutation DeletePipeline($id: String!) {
  deletePipeline(id: $id) {
    pipeline {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DuplicatePipeline($id: String!) {
  duplicatePipeline(id: $id) {
    pipeline {
      id
    }
    error {
      field
      message
    }
  }
}

mutation ConnectPipeline($id: String!, $connectPipelineId: String!, $flowCalculationDirection: FlowCalculationDirectionEnum!) {
  connectPipeline(id: $id, connectPipelineId: $connectPipelineId, flowCalculationDirection: $flowCalculationDirection) {
    id
  }
}

mutation DisconnectPipeline($id: String!, $disconnectPipelineId: String!, $flowCalculationDirection: FlowCalculationDirectionEnum!) {
  disconnectPipeline(id: $id, disconnectPipelineId: $disconnectPipelineId, flowCalculationDirection: $flowCalculationDirection) {
    id
  }
}

mutation ConnectSource($id: String!, $sourceId: String!) {
  connectSource(id: $id, sourceId: $sourceId) {
    id
    injectionPoints {
      id
    }
  }
}

mutation DisconnectSource($id: String!, $sourceId: String!) {
  disconnectSource(id: $id, sourceId: $sourceId) {
    id
    injectionPoints {
      id
    }
  }
}

mutation EditPipeline($id: String!, $satelliteId: String, $license: String, $segment: String, $flowCalculationDirection: FlowCalculationDirectionEnum, $from: String, $fromFeature: FromToFeatureEnum, $to: String, $toFeature: FromToFeatureEnum, $licenseDate: DateTime, $length: Float, $type: TypeEnum, $grade: GradeEnum, $yieldStrength: Int, $outsideDiameter: Float, $wallThickness: Float, $material: MaterialEnum, $mop: Int, $internalProtection: InternalProtectionEnum, $piggable: Boolean, $piggingFrequency: Int) {
  editPipeline(id: $id, satelliteId: $satelliteId, license: $license, segment: $segment, flowCalculationDirection: $flowCalculationDirection, from: $from, fromFeature: $fromFeature, to: $to, toFeature: $toFeature, licenseDate: $licenseDate, length: $length, type: $type, grade: $grade, yieldStrength: $yieldStrength, outsideDiameter: $outsideDiameter, wallThickness: $wallThickness, material: $material, mop: $mop, internalProtection: $internalProtection, piggable: $piggable, piggingFrequency: $piggingFrequency) {
    pipeline {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditLicenseChange($id: String!, $status: StatusEnum, $substance: SubstanceEnum, $date: DateTime, $linkToDocumentation: String) {
  editLicenseChange(id: $id, status: $status, substance: $substance, date: $date, linkToDocumentation: $linkToDocumentation) {
    licenseChange {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddLicenseChange($pipelineId: String!) {
  addLicenseChange(pipelineId: $pipelineId) {
    licenseChange {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeleteLicenseChange($id: String!) {
  deleteLicenseChange(id: $id) {
    licenseChange {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditPressureTest($id: String!, $limitingSpec: LimitingSpecEnum, $infoSentOutDate: DateTime, $ddsDate: DateTime, $pressureTestDate: DateTime, $pressureTestReceivedDate: DateTime, $integritySheetUpdated: DateTime, $comment: String) {
  editPressureTest(id: $id, limitingSpec: $limitingSpec, infoSentOutDate: $infoSentOutDate, ddsDate: $ddsDate, pressureTestDate: $pressureTestDate, pressureTestReceivedDate: $pressureTestReceivedDate, integritySheetUpdated: $integritySheetUpdated, comment: $comment) {
    pressureTest {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddPressureTest($pipelineId: String!) {
  addPressureTest(pipelineId: $pipelineId) {
    pressureTest {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeletePressureTest($id: String!) {
  deletePressureTest(id: $id) {
    pressureTest {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditPigRun($id: String!, $pigType: PigTypeEnum, $dateIn: DateTime, $dateOut: DateTime, $isolationValveFunctionTest: PigInspectionEnum, $pigSenderReceiverInspection: PigInspectionEnum, $comment: String, $operatorId: String) {
  editPigRun(id: $id, pigType: $pigType, dateIn: $dateIn, dateOut: $dateOut, isolationValveFunctionTest: $isolationValveFunctionTest, pigSenderReceiverInspection: $pigSenderReceiverInspection, comment: $comment, operatorId: $operatorId) {
    pigRun {
      id
    }
    error {
      field
      message
    }
  }
}

mutation AddPigRun($pipelineId: String!) {
  addPigRun(pipelineId: $pipelineId) {
    pigRun {
      id
    }
    error {
      field
      message
    }
  }
}

mutation DeletePigRun($id: String!) {
  deletePigRun(id: $id) {
    pigRun {
      id
    }
    error {
      field
      message
    }
  }
}

mutation EditRisk($id: String!, $aerialReview: Boolean, $environmentProximityTo: EnvironmentProximityToEnum, $geotechnicalSlopeAngleS1: Int, $geotechnicalFacingS1: GeotechnicalFacingEnum, $geotechnicalHeightS1: Int, $geotechnicalSlopeAngleS2: Int, $geotechnicalFacingS2: GeotechnicalFacingEnum, $geotechnicalHeightS2: Int, $dateSlopeChecked: DateTime, $repairTimeDays: Int, $releaseTimeDays: Int, $oilReleaseCost: Float, $gasReleaseCost: Float, $riskPeople: Int, $probabilityGeo: Float, $safeguardInternalProtection: Boolean, $safeguardExternalCoating: Boolean) {
  editRisk(id: $id, aerialReview: $aerialReview, environmentProximityTo: $environmentProximityTo, geotechnicalSlopeAngleS1: $geotechnicalSlopeAngleS1, geotechnicalFacingS1: $geotechnicalFacingS1, geotechnicalHeightS1: $geotechnicalHeightS1, geotechnicalSlopeAngleS2: $geotechnicalSlopeAngleS2, geotechnicalFacingS2: $geotechnicalFacingS2, geotechnicalHeightS2: $geotechnicalHeightS2, dateSlopeChecked: $dateSlopeChecked, repairTimeDays: $repairTimeDays, releaseTimeDays: $releaseTimeDays, oilReleaseCost: $oilReleaseCost, gasReleaseCost: $gasReleaseCost, riskPeople: $riskPeople, probabilityGeo: $probabilityGeo, safeguardInternalProtection: $safeguardInternalProtection, safeguardExternalCoating: $safeguardExternalCoating) {
    id
  }
}

mutation AddRisk($id: String!) {
  addRisk(id: $id) {
    id
  }
}

mutation DeleteRisk($id: String!) {
  deleteRisk(id: $id) {
    id
  }
}